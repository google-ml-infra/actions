// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ml_actions.benchmarking;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "buf/validate/validate.proto";
import "benchmarking/proto/common/stat.proto";

// A single computed statistic from a metric's raw data.
message ComputedStat {
  // REQUIRED: The name of the metric (e.g., "wall_time").
  string metric_name = 1 [(buf.validate.field).string.min_len = 1];
  
  // REQUIRED: The statistic that was computed (e.g., MEAN, P99).
  Stat stat = 2 [(buf.validate.field).enum = {not_in: [0]}];

  // REQUIRED: The numeric value of the computed statistic.
  google.protobuf.DoubleValue value = 3 [(buf.validate.field).required = true];
  
  // REQUIRED: The unit of measurement (e.g., "ms", "percent", "gb").
  string unit = 4 [(buf.validate.field).string.min_len = 1];
}

// The canonical result of a single benchmark run.
message BenchmarkResult {
  // REQUIRED: The unique ID for the benchmark configuration.
  string config_id = 1 [(buf.validate.field).string.min_len = 1];

  // REQUIRED: The Git commit hash the benchmark ran against.
  string commit_sha = 2 [(buf.validate.field).string.min_len = 1];

  // REQUIRED: The time the benchmark result was constructed.
  // This is generated by the infrastructure's parser and may not reflect
  // the exact benchmark execution start time.
  google.protobuf.Timestamp run_timestamp = 3 [(buf.validate.field).required = true];

  // REQUIRED: A list of all computed statistics captured during the run.
  repeated ComputedStat stats = 4 [(buf.validate.field).repeated.min_items = 1];

  // REQUIRED: The ID of the GitHub Actions workflow run for traceability.
  int64 github_run_id = 5 [(buf.validate.field).int64.gt = 0];
}


# Workflow to continuously regenerate the data for the ci dashboard
name: Generate dashboard data
permissions: {}
on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - ci_dashboard/data_query/**
      - .github/workflows/generate-dashboard-data.yaml
    branches:
      - main
jobs:
  generate-json:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.24.0
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      # Get values for cache paths t∏o be used in later steps
      - id: cache-paths
        run: |
          echo "go-cache=$(go env GOCACHE)" >> "$GITHUB_OUTPUT"
          echo "go-mod-cache=$(go env GOMODCACHE)" >> "$GITHUB_OUTPUT"
      - name: Cache go modules
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ${{ steps.cache-paths.outputs.go-cache }}
            ${{ steps.cache-paths.outputs.go-mod-cache }}
          key: ubuntu-latest-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ubuntu-latest-go-
      - name: Run the data generation
        env:
          GITHUB_REPOSITORY_ORG: jax-ml
          GITHUB_REPOSITORY_NAME: jax
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          cd ci_dashboard/data_query
          go run main.go
  generate-angular:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # ratchet:actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ci_dashboard/frontend/package-lock.json
      - name: Install dependencies
        working-directory: ci_dashboard/frontend
        run: npm ci
      # - name: Run Tests
      #   run: npm test
      - name: Build app
        working-directory: ci_dashboard/frontend
        run: npm run build
      - name: Move files
        working-directory: ci_dashboard/frontend
        shell: bash
        run: |
          mv dist/ci-dashboard/3rdpartylicenses.txt dist/ci-dashboard/browser
          ls -la dist/ci-dashboard
      - name: Upload Pages
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # ratchet:actions/upload-artifact@v4
        with:
          id: deployment
          path: ci_dashboard/frontend/dist/ci-dashboard/browser
  upload-site:
    if: github.event_name == 'push'
    needs: generate-angular
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # ratchet:actions/deploy-pages@v4





